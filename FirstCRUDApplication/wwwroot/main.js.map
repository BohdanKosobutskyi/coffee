{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/company/company.component.css","webpack:///./src/app/company/company.component.html","webpack:///./src/app/company/company.component.ts","webpack:///./src/app/company/company.service.ts","webpack:///./src/app/home.component.html","webpack:///./src/app/home.component.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,0D;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACL;AAQrC;IAIE,sBAAoB,IAAU;QAA9B,iBAIC;QAJmB,SAAI,GAAJ,IAAI,CAAM;QAH9B,UAAK,GAAG,KAAK,CAAC;QAIZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC3C,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,EAAc,CAAC;QAC1C,CAAC,EAAE,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IACpC,CAAC;IARU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;;;SAGnB,CAAC;yCAM0B,kDAAI;OAJnB,YAAY,CAUxB;IAAD,mBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACE;AACI;AACQ;AACV;AAC8B;AAG1B;AACa;AAE9D,wBAAwB;AACxB,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6DAAa,EAAE;CAC/C,CAAC;AAUF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAPrB,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,2DAAY,EAAE,6DAAa,EAAE,2EAAgB,CAAC;YAC7D,OAAO,EAAE,CAAC,uEAAa,EAAE,wDAAU,EAAE,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,0DAAW,EAAE,qEAAgB,CAAC;YACtG,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OAEW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzBtB,wBAAwB,KAAK,mDAAmD,+P;;;;;;;;;;;ACAhF,o+F;;;;;;;;;;;;;;;;;;;;;;;;;ACAiD;AACE;AASnD;IAII,0BAAmB,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;QAF9B,gBAAW,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;IAEL,CAAC;IAE5C,qCAAU,GAAV;QACI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM,IAAO,CAAC,EAAE,UAAC,GAAG;YAClE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IARQ;QAAR,2DAAK,EAAE;;yDAAwC;IAFvC,gBAAgB;QAP5B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;;YAGvB,SAAS,EAAE,CAAC,+DAAc,CAAC;SAC9B,CAAC;yCAM2B,+DAAc;OAJ9B,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiB;AACG;AACN;AACkC;AAI7E;IAII,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF7B,gBAAW,GAAG,yCAAyC,CAAC;IAEvB,CAAC;IAElC,mCAAU,GAAjB,UAAkB,OAAgB;QAC9B,IAAM,QAAQ,GAAG;YACb,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,KAAK,EAAE,OAAO,CAAC,KAAK;SACvB,CAAC;QAEF,IAAI,WAAW,GAAG,IAAI,gEAAW,CAAC;YAC9B,cAAc,EAAE,kBAAkB;SACrC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,WAAW,EAAE,QAAQ,EACrD;YACI,OAAO,EAAE,WAAW;YACpB,OAAO,EAAE,UAAU;SACtB,CACJ,CAAC,IAAI,CACF,iEAAU,CAAC,eAAK;YACd,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IA1BQ,cAAc;QAD1B,gEAAU,EAAE;yCAKiB,+DAAU;OAJ3B,cAAc,CA2B1B;IAAD,qBAAC;CAAA;AA3B0B;;;;;;;;;;;;ACR3B,0FAA0F,SAAS,mGAAmG,qPAAqP,SAAS,qH;;;;;;;;;;;;;;;;;;;;;;;;;ACA1Z;AACL;AAOrC;IAIE,uBAAoB,IAAU;QAA9B,iBAIC;QAJmB,SAAI,GAAJ,IAAI,CAAM;QAH9B,UAAK,GAAG,KAAK,CAAC;QAIZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC3C,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,EAAc,CAAC;QAC1C,CAAC,EAAE,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IACpC,CAAC;IARU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;SAErB,CAAC;yCAM0B,kDAAI;OAJnB,aAAa,CAUzB;IAAD,oBAAC;CAAA;AAVyB;;;;;;;;;;;;;ACR1B;AAAA;AAAA;AAA2E;AAC9B;AAC7C,IAAM,QAAQ,GAAG,gGAAsB,EAAE,CAAC;AAC1C,QAAQ,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'app';\r\n  public values: string[];\r\n\r\n  constructor(private http: Http) {\r\n    this.http.get('/api/values').subscribe(result => {\r\n      this.values = result.json() as string[];\r\n    }, error => console.error(error));\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n\r\nimport { HomeComponent } from './home.component';\r\nimport { CompanyComponent } from './company/company.component'\r\n\r\n// определение маршрутов\r\nconst appRoutes: Routes = [\r\n  { path: 'hometest', component: HomeComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n    declarations: [AppComponent, HomeComponent, CompanyComponent],\r\n    imports: [BrowserModule, HttpModule, RouterModule.forRoot(appRoutes), FormsModule, HttpClientModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","module.exports = \"body {\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcGFueS9jb21wYW55LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvY29tcGFueS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbn1cclxuIl19 */\"","module.exports = \"<div>\\r\\n  <div>\\r\\n    <label>\\r\\n      Company email:\\r\\n      <input [(ngModel)]=\\\"companyData.email\\\" placeholder=\\\"Company email\\\" />\\r\\n    </label><br>\\r\\n    <label>\\r\\n      Company title:\\r\\n      <input [(ngModel)]=\\\"companyData.title\\\" placeholder=\\\"Company title\\\" />\\r\\n    </label><br>\\r\\n  </div>\\r\\n  <button (click)=\\\"addCompany()\\\">Save</button>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"app-body\\\">\\r\\n  <main class=\\\"main d-flex align-items-center\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n          <div class=\\\"card mx-4\\\">\\r\\n            <div class=\\\"card-body p-4\\\">\\r\\n              <form>\\r\\n                <h1>Register</h1>\\r\\n                <p class=\\\"text-muted\\\">Create your account</p>\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" autocomplete=\\\"username\\\" required>\\r\\n                </div>\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">@</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" autocomplete=\\\"email\\\" required>\\r\\n                </div>\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\r\\n                  </div>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" autocomplete=\\\"new-password\\\" required>\\r\\n                </div>\\r\\n                <div class=\\\"input-group mb-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\r\\n                  </div>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Repeat password\\\" autocomplete=\\\"new-password\\\" required>\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-success\\\">Create Account</button>\\r\\n              </form>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer p-4\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <button class=\\\"btn btn-block btn-facebook\\\" type=\\\"button\\\"><span>facebook</span></button>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <button class=\\\"btn btn-block btn-twitter\\\" type=\\\"button\\\"><span>twitter</span></button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\\r\\n\"","import { Component, Input } from '@angular/core';\r\nimport { CompanyService } from './company.service';\r\n\r\n@Component({\r\n    selector: 'app-company',\r\n    templateUrl: './company.component.html',\r\n    styleUrls: ['./company.component.css'],\r\n    providers: [CompanyService]\r\n})\r\n\r\nexport class CompanyComponent {\r\n\r\n    @Input() companyData = { email: '', title: '' };\r\n\r\n    constructor(public rest: CompanyService) { }\r\n\r\n    addCompany() {\r\n        this.rest.addCompany(this.companyData).subscribe((result) => { }, (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n}\r\n","import { Company } from './company'\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\n\r\n\r\n@Injectable()\r\nexport class CompanyService {\r\n\r\n    public apiEndpoint = 'http://localhost:58114/company/register';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public addCompany(company: Company): Observable<HttpResponse<Company>> {\r\n        const postBody = {\r\n            email: company.email,\r\n            title: company.title\r\n        };\r\n\r\n        let httpHeaders = new HttpHeaders({\r\n            'Content-Type': 'application/json'\r\n        });\r\n\r\n        return this.http.post<Company>(this.apiEndpoint, postBody,\r\n            {\r\n                headers: httpHeaders,\r\n                observe: 'response'\r\n            }\r\n        ).pipe(\r\n            catchError(error => {\r\n              return throwError(error);\r\n            })\r\n        );\r\n    }\r\n}\r\n","module.exports = \"\\r\\n<!--<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to {{ title }}!\\r\\n  </h1>\\r\\n  <p *ngIf=\\\"!values\\\"><em>Loading...</em></p>\\r\\n\\r\\n  <div style=\\\"height: 350px; overflow: auto\\\">\\r\\n    <table class='table' *ngIf=\\\"values\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Values</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let value of values\\\">\\r\\n          <td>{{ value }}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>-->\\r\\n<app-company></app-company>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\n@Component({\r\n  selector: 'home-app',\r\n  templateUrl: './home.component.html'\r\n})\r\n\r\nexport class HomeComponent {\r\n  title = 'app';\r\n  public values: string[];\r\n\r\n  constructor(private http: Http) {\r\n    this.http.get('/api/values').subscribe(result => {\r\n      this.values = result.json() as string[];\r\n    }, error => console.error(error));\r\n  }\r\n\r\n}\r\n\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);\r\n"],"sourceRoot":""}